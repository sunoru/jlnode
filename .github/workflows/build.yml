name: Build & Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: v16.17.0

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download libnode
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          name: libnode-${{ env.NODE_VERSION }}-${{ runner.os }}-x64
          path: ./libnode
          repo: sunoru/libnode

      - name: Prepare envrionment
        run: |
          NODE_PATH=`pwd`/libnode
          if [ "$RUNNER_OS" == "Windows" ]; then
            NODE_PATH="$NODE_PATH/node-${{ env.NODE_VERSION }}-win-x64"
          fi
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "$NODE_PATH" >> $GITHUB_PATH
            echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$NODE_PATH" >> $GITHUB_ENV
          else
            echo "$NODE_PATH/bin" >> $GITHUB_PATH
            echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$NODE_PATH/lib" >> $GITHUB_ENV
          fi
          echo "CMAKE_JS_INC=$NODE_PATH/include/node" >> $GITHUB_ENV
          echo "INSTALL_PREFIX=`pwd`/dist" >> $GITHUB_ENV
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install ninja-build
          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install ninja
          else
            brew install ninja
          fi

      - name: Build libjlnode & jlnode_addon.node
        run: |
          cmake --build ./build --config Release -G "Ninja" -- -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX}
          cmake --install ./build

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-dist
          path: ${{ env.INSTALL_PREFIX }}
