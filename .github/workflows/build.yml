name: Build & Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: 18.12.1

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download libnode
        uses: dawidd6/action-download-artifact@v2
        if: runner.os != 'Windows'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          name: libnode-v${{ env.NODE_VERSION }}-${{ runner.os }}-x64
          path: ./libnode
          repo: sunoru/libnode

      - name: Prepare envrionment
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`pwd`/libnode/lib" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "NODEJS_LIBRARY=`pwd`/`echo libnode/lib/libnode.*.dylib`" >> $GITHUB_ENV
          fi
          echo "INSTALL_PREFIX=`pwd`/dist" >> $GITHUB_ENV
          npm ci

      - name: Build libjlnode & jlnode_addon.node
        run: |
          npm run build -- --CDCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX --CDNODEJS_LIBRARY=$NODEJS_LIBRARY
          cmake --install build

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-dist
          path: ${{ env.INSTALL_PREFIX }}
